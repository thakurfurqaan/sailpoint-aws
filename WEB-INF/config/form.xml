<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">

<!-- (c) Copyright 2010 SailPoint Technologies, Inc., All Rights Reserved. -->

<!--
  Initialization file for SailPoint forms.
-->
<sailpoint>

<!-- ====================================================================

  Identity refresh form.  This is the default "template" form used in the
  dynamic generation of work item forms to ask provisioning questions
  during the background refresh task.

========================================================================= -->

<Form name='Identity Refresh' type="Workflow">
  <Attributes>
    <Map>
      <entry key='pageTitle' value='Automatic provisioning form for $(identityName)'/>
    </Map>
  </Attributes>

  <Section type='text'>
    <Field>
      <Value>
        <String>
          During identity refresh, missing entitlements were detected
          for one or more assigned roles.  Provisioning these entitlements
          requires the creation of new accounts on one or more applications.
          Please supply initial values for account attributes in the forms below.
        </String>
      </Value>
    </Field>
  </Section>

  <Section label='Target Identity' type='datatable'>
    <Field displayName='Account ID' value='script:identity.getName()'/>
    <Field displayName='First Name' value='script:identity.getFirstname()'/>
    <Field displayName='Last Name' value='script:identity.getLastname()'/>
    <Field displayName='Assigned Roles'>
      <Script><Source>
          import sailpoint.api.ObjectUtil;
          import sailpoint.tools.Util;
          List names = ObjectUtil.getObjectNames(identity.getAssignedRoles());
          return Util.listToCsv(names);
      </Source></Script>
    </Field>
    <Attributes>
      <Map>
        <entry key='hideNulls' value='true'/>
      </Map>
    </Attributes>
  </Section>

  <!-- More sections inserted here -->

  <Button label='Ok' action='next'/>
  <Button label='Cancel' action='cancel'/>
  <Button label='Return' action='cancel' readOnly='true'/>

</Form>

<!-- ====================================================================

  Identity update form.  This is the default "template" form used in the
  dynamic generation of work item form to ask provisioning questions
  during interaction with the IIQ Define->Identities pages.

========================================================================= -->

<Form name='Identity Update' type="Workflow">
  <Attributes>
    <Map>
      <entry key='pageTitle' value='Request provisioning form for $(identityName)'/>
    </Map>
  </Attributes>

  <Section type='text'>
    <Field>
      <Value>
        <String>
          Please supply initial values for account attributes in the forms below.
        </String>
      </Value>
    </Field>
  </Section>

  <Section label='Request Information' type='datatable'>
    <Field displayName='Requester'>
      <Script>
        <Source>
          import sailpoint.object.Identity;

          Identity launchIdentity = context.getObject(Identity.class, launcher);

          return launchIdentity == null ? launcher : launchIdentity.getDisplayableName();
        </Source>
      </Script>
    </Field>
    <Field displayName='Requested Roles' value='ref:newRoles'/>
    <Attributes>
      <Map>
        <entry key='hideNulls' value='true'/>
      </Map>
    </Attributes>
  </Section>

  <Section label='Target Identity' type='datatable' columns='3'>
    <Field columnSpan="1" displayName='First Name' value='script:(identity != null) ? identity.getFirstname() : null'/>
    <Field columnSpan="1" displayName='Last Name' value='script:(identity != null) ? identity.getLastname() : null'/>
    <Field columnSpan="1" displayName='Account ID' value='script:(identity != null) ? identity.getDisplayableName() : null'/>
    <Field columnSpan="3" displayName='Assigned Roles'>
      <Script><Source>
          import java.util.ArrayList;
          import java.util.List;
          import sailpoint.object.Bundle;
          import sailpoint.tools.Util;

          String names = null;

          if (identity != null) {
              List&lt;String&gt; roleNames = new ArrayList&lt;String&gt;();

              for (Bundle bundle : Util.iterate(identity.getAssignedRoles())) {
                  roleNames.add(bundle.getDisplayableName());
              }

              names = Util.listToCsv(roleNames);
          }

          return names;
      </Source></Script>
    </Field>
    <Attributes>
      <Map>
        <entry key='hideNulls' value='true'/>
      </Map>
    </Attributes>
  </Section>

  <!-- More sections inserted here -->

  <Button label='Ok' action='next'/>
  <Button label='Cancel' action='cancel'/>
  <Button label='Return' action='cancel' readOnly='true'/>

</Form>

</sailpoint>
