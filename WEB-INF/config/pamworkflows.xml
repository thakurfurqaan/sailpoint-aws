<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">

<!-- (c) Copyright 2017 SailPoint Technologies, Inc., All Rights Reserved. -->

<!--
  Workflows and Forms for Privileged Account Management
 -->

<sailpoint>

<!-- **********************************************************************
  -
  - Identity Provisioning Workflow
  -
  - Workflow that is called by PAM Provisioning of Identities
  -
  ********************************************************************** -->

<Workflow name="PAM Identity Provisioning"
          type="PamProvisioning"
          libraries="Identity,PAM"
          handler="sailpoint.api.StandardWorkflowHandler">

  <Variable input="true" name="identityName">
    <Description>The name of the identity being updated.</Description>
  </Variable>

  <Variable input="true" name="identityDisplayName"
            initializer='script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)'>
    <Description>
      The displayName of the identity being updated.
      Query for this using a projection query and fall back to the name.
    </Description>
  </Variable>

  <Variable input="true" name="containerName">
    <Description>
      The name of the Container ManagedAttribute on which the identity's access is being modified.
    </Description>
  </Variable>

  <Variable input="true" name="containerDisplayName">
    <Description>
      The display name of the Container on which the identity's access is being modified.
    </Description>
  </Variable>

  <Variable input="true" name="plan">
    <Description>The provisioning plan ready to execute.</Description>
  </Variable>

  <Variable input="true" name="source" initializer="PAM">
    <Description>
      String version of sailpoint.object.Source to indicate
      where the request originated.  Defaults to PAM.
    </Description>
  </Variable>

  <Variable name='foregroundProvisioning' editable='true' initializer='true'>
    <Description>
      Normally provisioning is done in a step that uses the "background"
      option to force the workflow to be suspend and be resumed in a
      background task thread.  This prevents the browser session from
      hanging since provision can sometimes take a long time.  For demos
      and testing it can be better to do this in the foreground so that
      provisioning will have been performed when control is returned to the
      user.  This prevents having to run the Perform Maintenance task to
      see the results of the request.
    </Description>
  </Variable>

  <Variable initializer="user,requester" input="true" name="notificationScheme">
    <Description>
     A string that specifies who should be notified when the request has been complete.
     The value can be null or a csv of one or more of the following options.

     none or null
       disable notifications

     user
       Identity that is being update will be notified.

     manager
       The manager of the Identity that is being updated will be notified.

     requester
       The person that has requested the update will be notified.
    </Description>
  </Variable>

  <Variable name="userEmailTemplate" input="true" initializer="PAM User Notification">
    <Description>
     The email template to use for user notification.
    </Description>
  </Variable>

  <Variable name="requesterEmailTemplate" input="true" initializer="PAM Requester Notification">
    <Description>
     The email template to use for requester notification.
    </Description>
  </Variable>

  <Variable name="managerEmailTemplate" input="true" initializer="PAM Manager Notification">
    <Description>
     The email template to use for manager notification.
    </Description>
  </Variable>

  <Variable initializer="manager" input="true" name="approvalScheme">
    <Description>
      A csv string that specifies how approval items should be generated
      for the incoming request.

      The value can be "none", in which case approvals are disabled.

      The value can also be a combination of any of the values below
      in any order, separated by commas. The order in which they are
      specified is the order in which they are processed:

      manager
        The manager gets the approval item.

      identity
        The identities/workgroups in the variable approvingIdentities get the approval item.
    </Description>
  </Variable>

  <Variable initializer="spadmin" input="true" name="fallbackApprover">
    <Description>
      A String that specifies the name of the Identity that will
      be assigned any approvals where the owner of the approver
      can't be resolved. Example if the scheme is "owner" and the
      application doesn't specify and owner.
    </Description>
  </Variable>

  <Variable name="approvingIdentities" input="true">
    <Description>
      List of identities and/or workgroups names/ids that should be involved in the approval
      process.
    </Description>
  </Variable>

  <Variable name="managerElectronicSignature" input="true">
    <Description>
       The name of the electronic signature object that should be used when workitems
       are completed by a manager.
    </Description>
  </Variable>

  <Variable name="identityElectronicSignature" input="true">
    <Description>
      The name of the electronic signature object that should be used when workitems
      are completed by identities and/or workgroups.
    </Description>
  </Variable>

  <Variable name="approvalEmailTemplate" input="true" initializer="PAM Approval">
    <Description>
     The email template to use for approval notifications.
    </Description>
  </Variable>

  <Variable name="identityEmailTemplate" input="true">
    <Description>
      Name of the email template to use when notifying the identities/workgroups of pending approvals.
    </Description>
  </Variable>

  <Variable name="workItemPriority" initializer="Normal" input="true">
    <Description>
       The String version of a WorkItem.Priority. This variable is
       used to set the priority on all of the workitems generated
       as part of this workflow.
    </Description>
  </Variable>

  <Variable name="trace" initializer='false'>
    <Description>
      Used for debugging this workflow and when set to true trace
      will be sent to stdout.
    </Description>
  </Variable>

  <Variable name="identityRequestId" output="true">
    <Description>
      The sequence id of the IdentityRequest object which is stored in
      the name field of the identity request and auto-incremented.
    </Description>
  </Variable>

  <!--  Local Variables -->
  <Variable name="pamRequest" initializer="call:createPamRequest">
    <Description>The PamRequest that has information about the request.</Description>
  </Variable>

  <Variable name="project">
    <Description>
      ProvisioningProject which is just a compiled version of the ProvisioningPlan.
    </Description>
  </Variable>


  <Step icon="Start" name="Start" posX="25" posY="10">
    <Transition to="Initialize"/>
  </Step>

  <Step icon="Task" name="Initialize" posX="123" posY="10">
    <Description>
      Initialize the request by creating a project and identity request.
    </Description>
    <WorkflowRef>
      <Reference class='Workflow' name='PAM Initialize'/>
    </WorkflowRef>
    <Arg name='flow' value='ref:source'/>
    <Arg name='identityName' value='ref:identityName'/>
    <Arg name='identityDisplayName' value='ref:identityDisplayName'/>
    <Arg name='launcher' value='ref:launcher'/>
    <Arg name='optimisticProvisioning' value='false'/>
    <Arg name='plan' value='ref:plan'/>
    <Arg name='workItemPriority' value='ref:workItemPriority'/>
    <Arg name='source' value='ref:source'/>
    <Arg name='trace' value='ref:trace'/>
    <Return name='project' to='project'/>
    <Return name='identityRequestId' to='identityRequestId'/>
    <Transition to="Approve"/>
  </Step>

  <Step name="Approve" icon="Task" posX="224" posY="10">
    <Description>
      Approve the request based on the approvalScheme.
    </Description>
    <WorkflowRef>
      <Reference class='Workflow' name='PAM Approval Subprocess'/>
    </WorkflowRef>

    <Arg name="approvalScheme" value="ref:approvalScheme"/>
    <Arg name="approvingIdentities" value='ref:approvingIdentities'/>
    <Arg name="containerName" value="ref:containerName"/>
    <Arg name="containerDisplayName" value="ref:containerDisplayName"/>
    <Arg name="fallbackApprover" value="ref:fallbackApprover"/>
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="identityDisplayName" value="ref:identityDisplayName"/>
    <Arg name="identityElectronicSignature" value='ref:identityElectronicSignature'/>
    <Arg name="identityEmailTemplate" value='ref:identityEmailTemplate'/>
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="launcher" value="ref:launcher"/>
    <Arg name="managerEmailTemplate" value="ref:approvalEmailTemplate"/>
    <Arg name="managerElectronicSignature" value="ref:managerElectronicSignature"/>
    <Arg name="pamRequest" value="ref:pamRequest"/>
    <Arg name="project" value="ref:project"/>
    <Arg name="plan" value="ref:plan"/>
    <Arg name="workItemPriority" value="ref:workItemPriority"/>
    <Arg name="trace" value="ref:trace"/>
    <Arg name="workItemReminderTemplate" value="ref:workItemReminderTemplate"/>
    <Arg name="workItemHoursBetweenReminders" value="ref:workItemHoursBetweenReminders"/>
    <Arg name="workItemMaxReminders" value="ref:workItemMaxReminders"/>
    <Arg name="workItemEscalationTemplate" value="ref:workItemEscalationTemplate"/>
    <Arg name="workItemHoursTillEscalation" value="ref:workItemHoursTillEscalation"/>
    <Arg name="workItemEscalationRule" value="ref:workItemEscalationRule"/>
    <Arg name="workItemComments" value="ref:workItemComments"/>

    <Return name="pamRequest" to="pamRequest"/>
    <Return name='project' to='project'/>
    <Transition to="Notify" when="script: !pamRequest.isApproved()"/>
    <Transition to="Provision"/>
  </Step>

  <Step icon="Task" name="Provision" posX="353" posY="83">
    <Description>
      Provision the changes, retrying any failures if necessary.
    </Description>
    <WorkflowRef>
      <Reference class='Workflow' name='Provision with retries'/>
    </WorkflowRef>
    <Arg name="project" value="ref:project"/>
    <Arg name='foregroundProvisioning' value='ref:foregroundProvisioning'/>
    <Arg name='trace' value='ref:trace'/>
    <Arg name='disableIdentityRequests' value='false'/>
    <Arg name="splitProvisioning" value='false'/>
    <Return name='retries' to='retries'/>
    <Return name='project' to='project'/>
    <Transition to="Notify"/>
  </Step>

  <Step icon="Task" name="Notify" posX="425" posY="7">
    <Description>
      Call the standard subprocess that will notify the various
      actors based on notification scheme.
    </Description>
    <WorkflowRef>
      <Reference class='Workflow' name='PAM Identity Provisioning Notify'/>
    </WorkflowRef>
    <Arg name='identityDisplayName' value='ref:identityDisplayName'/>
    <Arg name='identityName' value='ref:identityName'/>
    <Arg name='containerDisplayName' value='ref:containerDisplayName'/>
    <Arg name='containerName' value='ref:containerName'/>
    <Arg name='launcher' value='ref:launcher'/>
    <Arg name='notificationScheme' value='ref:notificationScheme'/>
    <Arg name='userEmailTemplate' value='ref:userEmailTemplate'/>
    <Arg name='requesterEmailTemplate' value='ref:requesterEmailTemplate'/>
    <Arg name='managerEmailTemplate' value='ref:managerEmailTemplate'/>
    <Arg name="pamRequest" value="ref:pamRequest"/>
    <Arg name='plan' value='ref:plan'/>
    <Arg name='trace' value='ref:trace'/>
    <Arg name='source' value='ref:source'/>
    <Transition to="end"/>
  </Step>

  <Step catches="complete" icon="Catches" name="Finalize" posX="489" posY="83">
    <Description>
      Call the standard subprocess that can finalize the request.
    </Description>
    <WorkflowRef>
      <Reference class='Workflow' name='PAM Request Finalize'/>
    </WorkflowRef>
    <Arg name='approvalSet' value='call:createApprovalSetFromPamRequest'/>
    <Arg name='identityRequestId' value='ref:identityRequestId'/>
    <Arg name='project' value='ref:project'/>
    <Arg name='workItemPriority' value='ref:workItemPriority'/>
    <Arg name='trace' value='ref:trace'/>
  </Step>

  <Step icon="Stop" name="end" posX="582" posY="7"/>

</Workflow>


<!-- **********************************************************************
  -
  - Subprocess used to initialize the information used by the PAM workflow.
  -
  -  This subprocess returns a ProvisioningProject and identityRequestId.
  -
  ********************************************************************** -->
<Workflow name="PAM Initialize"
          type='Subprocess'
          libraries="Identity,IdentityRequest">

  <Description>
      This workflow subprocess is used to initialize the various
      object necessary when executing the PAM workflow.  This
      creates the ProvisioningProject and IdentityRequest.
  </Description>

  <Variable name='identityName' input='true' required='true'>
    <Description>
      The name of the identity object being modified.
    </Description>
  </Variable>

  <Variable name="identityDisplayName" input='true'
            initializer='script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)'>
    <Description>
      The displayName of the identity being updated.
      This may be passed in, if not the script queries for this
      using a projection query and falls back to the name.
    </Description>
  </Variable>

  <Variable input="true" name="flow" initializer="PAM">
    <Description>
      The flow is used to set the type on the IdentityRequest.
    </Description>
  </Variable>

  <Variable input="true" name="plan" required='true'>
    <Description>The provisioning plan ready to execute.</Description>
  </Variable>

  <Variable name='optimisticProvisioning' input='true' required='true'>
    <Description>
      Set to true to enable optimistic provisioning.  This will cause
      changes to the entitlements compiled from role assignments to be
      applied immediately to the identity cube rather than waiting
      for the next refresh/reaggregation after the provisioning system
      completes the request.
    </Description>
  </Variable>

  <Variable name="trace" input="false" initializer="false">
    <Description>
      Used for debugging this subprocess and when set to true trace
      statements will be sent to stdout.
    </Description>
  </Variable>

  <Variable input="true" name="source" initializer="PAM">
    <Description>
      String version of sailpoint.object.Source to indicate
      where the request originated.  Defaults to PAM.
    </Description>
  </Variable>

  <Variable name='workItemPriority' input='true'>
    <Description>
      String version of WorkItem.level that will be used
      to set the priority any generated workitems. It will
      also configure the priority of the request as
      on the generated Access Request.
    </Description>
  </Variable>

  <!-- Out -->
  <Variable name='project' output='true'>
    <Description>
      A ProvisioningProject object describing the modifications to the identity.
      This may include a list of Question objects which will
      cause the generation of a Form and a WorkItem to solicit
      additional information necessary for provisioning.
    </Description>
  </Variable>

  <Variable name="identityRequestId" output="true">
    <Description>
      The id of the IdentityRequest created.
    </Description>
  </Variable>

  <Variable name="identityRequest">
    <Description>
       The request object we get back from the create call. This is
       primarily useful for debugging.
    </Description>
  </Variable>


  <Step icon="Start" name="Start" posX="25" posY="15">
    <Transition to="Compile Project"/>
  </Step>

  <Step action="call:compileProvisioningProject" icon="Task" name="Compile Project" posX="121" posY="15" resultVariable="project">
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="plan" value="ref:plan"/>
    <Arg name="requester" value="ref:launcher"/>
    <Arg name="source" value="ref:source"/>
    <Arg name="optimisticProvisioning" value="ref:optimisticProvisioning"/>
    <Arg name="disableRetryRequest" value="false"/>
    <Arg name="noApplicationTemplates" value="false"/>
    <Arg name="noLocking" value="false"/>
    <Description>Compile the provisioning plan into a provisioning project.
      If you need to pass in provisioner options like "noFiltering"
      or "noRoleDeprovisioning" you must pass them as explicit
      arguments to the call.

      The evaluation options "requester" and "source" are commonly
      set here.

      You can also pass things into the Template and Field scripts by
      defining Args in this step.</Description>
    <Transition to="Create Identity Request"/>
  </Step>

  <Step action="call:createIdentityRequest" icon="Task" name="Create Identity Request" posX="235" posY="15" resultVariable="identityRequest">
    <Arg name="flow" value="ref:flow"/>
    <Arg name="identityDisplayName" value="ref:identityDisplayName"/>
    <Arg name="project" value="ref:project"/>
    <Arg name="workItemPriority" value="ref:workItemPriority"/>
    <Arg name="source" value="ref:source"/>
    <Transition to="end"/>
  </Step>

  <Step icon="Stop" name="end" posX="340" posY="15"/>

</Workflow>



<!-- **********************************************************************
  -
  - Approval sub-process for PAM requests.  This generates approvals
  - based on the approvalScheme, audits the approval decisions, and
  - returns the approved status.
  -
  ********************************************************************** -->

<Workflow name="PAM Approval Subprocess"
          libraries="PAM,IdentityRequest,Identity"
          explicitTransitions="true"
          type="Subprocess">

  <Description>
    Approval sub-process for PAM requests.  This generates approvals
    based on the approvalScheme, audits the approval decisions, and
    returns the approved status.
  </Description>

  <!--  Inputs  -->
  <Variable name="identityName" input="true">
    <Description>The name of the identity being updated.</Description>
  </Variable>

  <Variable name="identityDisplayName" input="true">
    <Description>
      The displayName of the identity being updated.
      Query for this using a projection query and fall back to the name.
    </Description>
  </Variable>

  <Variable input="true" name="containerName">
    <Description>
      The name of the Container ManagedAttribute on which the identity's access is being modified.
    </Description>
  </Variable>

  <Variable input="true" name="containerDisplayName">
    <Description>
      The display name of the Container on which the identity's access is being modified.
    </Description>
  </Variable>

  <Variable name="project" input="true" output="true">
    <Description>
      ProvisioningProject which is just a compiled version of the ProvisioningPlan.
    </Description>
  </Variable>

  <Variable name="plan" input="true">
    <Description>The provisioning plan.</Description>
  </Variable>

  <Variable input="true" name="approvalScheme">
    <Description>
      A csv string that specifies how approval items should be generated
      for the incoming request.

      The value can be "none", in which case approvals are disabled.

      The value can also be a combination of any of the values below
      in any order, separated by commas. The order in which they are
      specified is the order in which they are processed:

      manager
        The manager gets the approval item.

      identity
        The identities/workgroups in the variable approvingIdentities get the approval item.
    </Description>
  </Variable>

  <Variable name="approvingIdentities" input="true">
    <Description>
       List of identities and/or workgroups names/ids that should be involved in the approval
       process.
    </Description>
  </Variable>

  <Variable name="fallbackApprover" initializer="spadmin" input="true">
    <Description>
      A String that specifies the name of the Identity that will
      be assigned any approvals where the owner of the approver
      can't be resolved. Example if the scheme is "owner" and the
      application doesn't specify and owner.
    </Description>
  </Variable>

  <Variable name="managerElectronicSignature" input="true">
    <Description>
       The name of the electronic signature object that should be used when workitems
       are completed by a manager.
    </Description>
  </Variable>

  <Variable name="identityElectronicSignature" input="true">
    <Description>
       The name of the electronic signature object that should be used when workitems
       are completed by object owners.
    </Description>
  </Variable>

  <Variable name="managerEmailTemplate" initializer="PAM Approval" input="true">
    <Description>
       Name of the email template to use when manager of pending approvals.
    </Description>
  </Variable>

  <Variable name="identityEmailTemplate" initializer="PAM Approval" input="true">
    <Description>
       Name of the email template to use when notifying the security officer of pending approvals.
    </Description>
  </Variable>

  <Variable name="trace" initializer='false'>
    <Description>
      Used for debugging this workflow and when set to true trace
      will be sent to stdout.
    </Description>
  </Variable>

  <Variable name='workItemDescription' input='true'>
     <Description>String "template" that will be used as the workitem description.</Description>
  </Variable>

  <Variable name='workItemEscalationTemplate' input='true'>
      <Description>The email template that should be used when sending out reminders.</Description>
  </Variable>

  <Variable name='workItemHoursBetweenReminders' input='true'>
    <Description>The number of hours to wait between sending reminders to approvers.</Description>
  </Variable>

  <Variable name='workItemHoursTillEscalation' input='true'>
    <Description>The number of hourse to wait until an approval should be escalated.</Description>
  </Variable>

  <Variable name="workItemPriority" initializer="Normal" input="true">
    <Description>
       The String version of a WorkItem.Priority. This variable is
       used to set the priority on all of the workitems generated
       as part of this workflow.
    </Description>
  </Variable>

  <Variable name='workItemReminderTemplate' input='true'>
    <Description>
      The email template that should be used when sending out reminders.  This must be set to enable
      approval reminders.
    </Description>
  </Variable>

  <Variable name='workItemEscalationRule' input='true'>
    <Description>The rule used to assign a new ownder during escalation.</Description>
  </Variable>

  <Variable name='workItemMaxReminders' input='true'>
    <Description>The maximum number of reminder emails that will be sent before we begin the escalation process.</Description>
  </Variable>

  <!--  Input/Ouput Variables -->
  <Variable name="pamRequest" input="true" output="true">
    <Description>
      The PamRequest that has information about the request.  The "approved" flag on the PamRequest will be updated
      appropriately when the approval is approved/rejected.
    </Description>
  </Variable>


  <Step icon="Start" name="Start" posX="20" posY="22">
    <Transition to="Approval"/>
  </Step>

  <Step name="Approval" icon="Approval" posX="158" posY="22">
    <Approval renderer="commonWorkItem.xhtml"
              owner="call:createApprovals"
              mode="serial"
              send="identityDisplayName,identityName,containerName,containerDisplayName,plan,pamRequest"
              return="pamRequest">

      <Arg name='launcher' value='ref:launcher'/>
      <Arg name='approvalMode' value='serial'/>
      <Arg name='approvalScheme' value='ref:approvalScheme'/>
      <Arg name='workItemDescription' value='ref:workItemDescription'/>
      <Arg name='workItemEscalationRule' value='ref:workItemEscalationRule'/>
      <Arg name='workItemEscalationTemplate' value='ref:workItemEscalationTemplate'/>
      <Arg name='workItemHoursTillEscalation' value='ref:workItemHoursTillEscalation'/>
      <Arg name='workItemMaxReminders' value='ref:workItemMaxReminders'/>
      <Arg name='workItemHoursBetweenReminders' value='ref:workItemHoursBetweenReminders'/>
      <Arg name='workItemNotificationTemplate' value='ref:approvalEmailTemplate'/>
      <Arg name='workItemPriority' value='ref:workItemPriority'/>
      <Arg name='workItemReminderTemplate' value='ref:workItemReminderTemplate'/>
      <Arg name='workItemRequester' value='$(launcher)'/>
      <AfterScript>
        <Source>
          <![CDATA[
            import sailpoint.object.WorkItem;
            import sailpoint.workflow.PAMLibrary;

            // If there were no approvals generated, we will mark the request as approved. This
            // can happen if the approval scheme is set to "none" or if the approvals are auto-completed.
            if (approval.isComplete() && (null == pamRequest.getApprovalState())) {
                pamRequest.setApprovalState(WorkItem.State.Finished);
            }

            // After completing the approval, update the PamRequest and IdentityRequest status.
            PAMLibrary.approvalWorkItemCompleted(wfcontext, pamRequest, item);
          ]]>
        </Source>
      </AfterScript>
      <InterceptorScript>
        <Source>
          <![CDATA[
            import sailpoint.object.Workflow;
            import sailpoint.object.WorkItem;
            import sailpoint.service.pam.PamApprovalService;
            import sailpoint.service.pam.PamRequest;
            import sailpoint.workflow.PAMLibrary;

            if (Workflow.INTERCEPTOR_OPEN_WORK_ITEM.equals(method)) {
                // After creating the work item, update the PamRequest and IdentityRequest status.
                PAMLibrary.approvalWorkItemOpened(wfcontext, pamRequest, item);
            }
            else if (Workflow.INTERCEPTOR_PRE_ASSIMILATION.equals(method)) {
                // When the approval is completed, propagate the state between the PamRequest and WorkItem.
                // If this is being assimilated due to a decision being made, the PamRequest state will get copied
                // onto the WorkItem.  If this is being assimilated due to an expired work item, the WorkItem state
                // will get copied onto the PamRequest.
                if (null != request) {
                    request = PamApprovalService.getPamRequest(item);

                    if (null != request.getApprovalState()) {
                        item.setState(request.getApprovalState());
                    }
                    else if (null != item.getState()) {
                        request.setApprovalState(item.getState());
                    }
                }
            }
          ]]>
        </Source>
      </InterceptorScript>
    </Approval>
    <Transition to="Refresh Project"/>
  </Step>

  <Step name="Refresh Project" action="call:recompileProject" icon="Task" posX="300" posY="22" resultVariable="project">
    <Arg name="project" value="ref:project"/>
    <Description>
      Recompile the ProvisioningProject after approval.  This will filter any requests that may have already been
      fulfilled in another PAM request since this was launched.
    </Description>

    <Transition to="Audit Approval Decision"/>
  </Step>

  <Step name="Audit Approval Decision" action="call:auditApprovalDecision" icon="Task" posX="440" posY="22">
    <Arg name="approved" value="ref:approved"/>
    <Arg name="plan" value="ref:plan"/>
    <Arg name="project" value="ref:project"/>

    <Transition to="Refresh Identity Request"/>
  </Step>

  <Step action="call:refreshIdentityRequestAfterApproval" icon="Task" name="Refresh Identity Request" posX="580" posY="22">
    <Arg name="project" value="ref:project"/>
    <Arg name="approvalSet" value="call:createApprovalSetFromPamRequest"/>
    <Arg name="splitProvisioning" value="false"/>
    <Arg name="state" value="script: (pamRequest.isApproved()) ? &quot;Provision&quot; : &quot;Notify&quot;"/>
    <Description>
      Update the IdentityRequest with information from the approval.
    </Description>
    <Transition to="end"/>
  </Step>

  <Step name="end" icon="Stop" posX="720" posY="22"/>

</Workflow>


<!-- **********************************************************************
  -
  - Subprocess to handle notification from the PAM provisioning workflows
  -
  ********************************************************************** -->

<Workflow name="PAM Identity Provisioning Notify"
          type='Subprocess'
          libraries='PAM'>

  <Variable name='identityName' input='true' required='true'>
    <Description>
      The name of the identity object being modified.
    </Description>
  </Variable>

  <Variable name="identityDisplayName" input='true'
            initializer='script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)'>
    <Description>
      The displayName of the identity being updated.
      This may be passed in, if not the script queries for this
      using a projection query and falls back to the name.
    </Description>
  </Variable>

  <Variable input="true" name="containerName">
    <Description>
      The name of the Container ManagedAttribute on which the identity's access is being modified.
    </Description>
  </Variable>

  <Variable input="true" name="containerDisplayName">
    <Description>
      The display name of the Container on which the identity's access is being modified.
    </Description>
  </Variable>

  <Variable input="true" name="notificationScheme">
    <Description>
     A string that specifies who should be notified when the request has been complete.
     The value can be null or a csv of one or more of the following options.

     none or null
       disable notifications

     user
       Identity that is being updated will be notified.

     manager
       The manager of the Identity that is being updated will be notified.

     requester
       The person that has requested the update will be notified.
    </Description>
  </Variable>

  <Variable name="trace" input="true">
    <Description>
      Used for debugging this subprocess and when set to true trace
      statements will be sent to stdout.
    </Description>
  </Variable>

  <Variable input="true" name="plan">
    <Description>The provisioning plan for the request.</Description>
  </Variable>

  <Variable name="userEmailTemplate" initializer="PAM User Notification" input="true">
    <Description>
       Name of the email template to use when notifying the user.
    </Description>
  </Variable>

  <Variable name="managerEmailTemplate" initializer="PAM Manager Notification" input="true">
    <Description>
       Name of the email template to use when notifying the manager.
    </Description>
  </Variable>

  <Variable name="requesterEmailTemplate" initializer="PAM Requester Notification" input="true">
    <Description>
       Name of the email template to use when notifying the requester.
    </Description>
  </Variable>

  <Variable name="pamRequest" input="true">
    <Description>The PamRequest that has information about the request.</Description>
  </Variable>

  <Variable name="approverDisplayName" initializer="script: (null != pamRequest.getApprover()) ? resolveDisplayName(pamRequest.getApprover()) : null">
    <Description>The display name of the approver of the request, or null if there was no approver.</Description>
  </Variable>


  <Step icon="Start" name="Start" posX="28" posY="10">
    <Transition to="Notify User"/>
  </Step>

  <Step action="call:sendEmail" condition="script:Util.csvToList(notificationScheme).contains(&quot;user&quot;)" icon="Email" name="Notify User" posX="98" posY="10">
    <Arg name="template" value="ref:userEmailTemplate"/>
    <Arg name="to" value="script:getUserEmail(identityName, plan)"/>
    <Arg name="pamRequest" value="ref:pamRequest"/>
    <Arg name="approverDisplayName" value="ref:approverDisplayName"/>
    <Transition to="Notify Requester"/>
  </Step>

  <Step action="call:sendEmail" condition="script:Util.csvToList(notificationScheme).contains(&quot;requester&quot;)" icon="Email" name="Notify Requester" posX="216" posY="10">
    <Arg name="template" value="ref:requesterEmailTemplate"/>
    <Arg name="to" value="script:getEmail(launcher)"/>
    <Arg name="pamRequest" value="ref:pamRequest"/>
    <Arg name="approverDisplayName" value="ref:approverDisplayName"/>
    <Transition to="Notify Manager"/>
  </Step>

  <Step action="call:sendEmail" condition="script:Util.csvToList(notificationScheme).contains(&quot;manager&quot;)" icon="Email" name="Notify Manager" posX="351" posY="10">
    <Arg name="template" value="ref:managerEmailTemplate"/>
    <Arg name="to" value="script:getManagersEmail(identityName, plan)"/>
    <Arg name="pamRequest" value="ref:pamRequest"/>
    <Arg name="approverDisplayName" value="ref:approverDisplayName"/>
    <Transition to="end"/>
  </Step>

  <Step icon="Stop" name="end" posX="483" posY="10"/>

</Workflow>


<!-- **********************************************************************
  -
  - Subprocess to handle final step from the PAM workflows.
  -
  ********************************************************************** -->

<Workflow name="PAM Request Finalize"
          libraries="Identity,IdentityRequest"
          type='Subprocess'>

  <Variable name="project">
    <Description>
      ProvisioningProject which is just a compiled version of the ProvisioningPlan.
      From the project the IdentityRequestItem model will be updated.
    </Description>
  </Variable>

  <Variable name="identityRequestId" input="true" output="true">
    <Description>
       The ID ot the identitytRequestId.

       This step will update the identityRequest status and completion
       status.
    </Description>
  </Variable>

  <Variable name="approvalSet" input="true">
    <Description>
      An ApprovalSet with information about the request.
    </Description>
  </Variable>

  <Variable name="trace" input="true">
    <Description>
      Used for debugging this subprocess and when set to true trace
      statements will be sent to stdout.
    </Description>
  </Variable>

  <Variable name="autoVerifyIdentityRequest">
    <Description>
      Flag to indicate when finishing the request we should
      automatically mark it verified.
    </Description>
  </Variable>

  <Variable name='workItemPriority' input='true'>
    <Description>
      String version of WorkItem.level that was used
      to set the priority of the IdentityRequest and
      workitems.
    </Description>
  </Variable>

  <Step icon="Start" name="Start" posX="15" posY="12">
    <Transition to="Complete Request"/>
  </Step>

  <Step name="Complete Request" action="call:completeIdentityRequest" icon="Task" posX="115" posY="12" resultVariable="identityRequest">
    <Arg name="project" value="ref:project"/>
    <Arg name="approvalSet" value="ref:approvalSet"/>
    <Arg name="autoVerify" value="$(autoVerifyIdentityRequest)"/>
    <Arg name='identityRequestId' value='ref:identityRequestId'/>
    <Transition to="end"/>
  </Step>

  <Step icon="Stop" name="end" posX="215" posY="12"/>

</Workflow>

</sailpoint>
