<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">

<!--
The custom HP Service Manager Interrogator's task can fetch the status of the request from iiq, but there
is nothing built-in to the product.  See comments for status values below to understand what
the link is between what return and what's in HP Service Manager.
-->

<sailpoint>

  <Rule language='beanshell' name='HPServiceManagerIntegrationRuleForIncident' type='Integration'>
    <Description>
      Use this rule to customize the data loaded into the provisioningPlan's 
      integrationData object. The provisioningPlan and its integrationData 
      object are used by Velocity to populate values in the XML templates for 
      the web service calls.
    </Description>
    <Signature returnType='Attributes'>
      <Inputs>
        <Argument name='identity'>
          <Description>
            A sailpoint.object.Identity representing the person being remediated.
          </Description>
        </Argument>
        <Argument name='plan'>
          <Description>
            A sailpoint.object.ProvisioningPlan representing remediation.
          </Description>
        </Argument>
        <Argument name='context'>
          <Description>
            A sailpoint.api.SailPointContext object that can be used to 
            query the database to find the Rule.
          </Description>
        </Argument>
        <Argument name='log'>
          <Description>
            A Log object to help report and/or debug the Rule.
          </Description>
        </Argument>
      </Inputs>
    </Signature>
    <Source>
      <![CDATA[
      import java.util.ArrayList;
      import java.util.List;
      import sailpoint.object.Identity;
      
      Map map = (Map)plan.getIntegrationData();
      map.put("identityName", identity.getName());
      //System.out.println ("Plan: "  + plan.toXml());

      if (identity.getFirstname() != null)  {
        map.put("identityFirstname", identity.getFirstname());
      }

      if (identity.getLastname() != null)  {
        map.put("identityLastname", identity.getLastname());
      }
     
      List requesters = new ArrayList();
      List planRequesters = plan.getRequesters();
      if (planRequesters != null) {
        for (int i = 0 ; i < planRequesters.size() ; i++) {
          Identity req = (Identity)planRequesters.get(i);
          requesters.add(req.getDisplayableName());
          //System.out.println ("Requester: " + req.getDisplayableName()); 
        }
      } else
        requesters.add("IIQRequestor");
        map.put("requesters", requesters);
        map.put("sourceId", plan.getSourceId());
        map.put("sourceName", plan.getSourceName());
        map.put("sourceType", plan.getSourceType());
    ]]>
    </Source>
  </Rule>

  <IntegrationConfig name="HPServiceManagerIntegrationForIncident"
                   executor="sailpoint.integration.hpservicemanager.HPServiceManagerIntegrationExecutor"
                   roleSyncStyle="none">

    <PlanInitializer>
      <Reference class="sailpoint.object.Rule" name="HPServiceManagerIntegrationRuleForIncident"/>
    </PlanInitializer>
   
    <!--
      Connection params.  Can also include username and password for
      SOAP authentication.
    -->
    <Attributes>
      <Map>
        <!-- when set to true disables the saving of provisioning request objects -->
        <entry key='noProvisioningRequests' value='false'/>

        <!-- no reason not to handle all request types, but the resources won't have 
             support some by default.  TODO : think about adding the features -->
        <entry key='operations' value='Create,Modify,Delete,Enable,Unlock,SetPassword'/>

        <!-- date formatting for dateTime XML data type used for SOAP request timestamp -->
        <entry key="dateFormat" value="yyyy-MM-dd'T'HH:mm:ss"/>
        <!-- authentication -->
        <!-- Enter the username and password of admin user -->
        <entry key="username" value=""/>
        <entry key="password" value=""/>

        <!-- configuration maps for the different integration methods -->
        <!-- all mentioned fields are mandatory -->
        <entry key="provision">
          <value>
            <Map>
              <entry key="endpoint" value="http://localhost:13080/SM/7/ws"/> <!-- e.g. http://ip_address or host_name:port_number/SM/7/ws -->
              <entry key="namespace" value="http://schemas.hp.com/SM/7"/> <!-- mention it as per the WSDL file generated by the HP Service Manger-->
              <entry key="prefix" value="ns"/> <!-- mention it as per the WSDL file generated by the HP Service Manger-->
              <entry key="SOAPAction" value="Create"/> <!-- it will tells HP Service Manager what action should perform -->
              <entry key="responseElement" value="IncidentID"/> <!-- attribute of a soap response which has the incident number -->
              <entry key="soapMessage">
              <!-- SOAP Message Template -->
                <value>
                  <String><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://schemas.hp.com/SM/7" xmlns:com="http://schemas.hp.com/SM/7/Common" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:CreateIncidentRequest attachmentInfo="false" attachmentData="false" ignoreEmptyElements="true" updateconstraint="">
                  <ns:model query="">
            <ns:keys query=""/>
            <ns:instance query="" uniquequery="" recordid="">
               <ns:Category type="String" mandatory="" readonly="">incident</ns:Category>
               <ns:OpenedBy type="String" mandatory="" readonly="">$config.username</ns:OpenedBy>
               <ns:Urgency type="String" mandatory="" readonly="">3</ns:Urgency>
               <ns:AssignmentGroup type="String" mandatory="" readonly="">Service Desk</ns:AssignmentGroup>
               <ns:Description type="Array">
                  <!--Zero or more repetitions:-->
                  <ns:Description type="String" mandatory="" readonly="">#foreach ($request in $provisioningPlan.accountRequests)
#if ($request.attributeRequests)
#foreach ($att in $request.attributeRequests)
$request.application $att.operation $att.name $att.value
#end
#else
$request.operation $request.application nativeIdentity $request.nativeIdentity
#end
#end
Source Data:
id= $!provisioningPlan.integrationData.sourceId
name= $!provisioningPlan.integrationData.sourceName
type= $!provisioningPlan.integrationData.sourceType</ns:Description>
               </ns:Description>
               <ns:Title type="String" mandatory="" readonly="">IdentityIQ Access Request : $!provisioningPlan.integrationData.identityRequestId for Identity $!provisioningPlan.integrationData.identityName</ns:Title>
               <ns:Area type="String" mandatory="" readonly="">access</ns:Area>
               <ns:Subarea type="String" mandatory="" readonly="">authorization error</ns:Subarea>
               <ns:Impact type="String" mandatory="" readonly="">4</ns:Impact>
               <!--
                   For HPSM 9.4 and 9.3 set "Service" as a "Applications"
               -->
               <ns:Service type="String" mandatory="" readonly="">CI1001030</ns:Service>
            </ns:instance>
            <ns:messages/>
         </ns:model>
      </ns:CreateIncidentRequest>
   </soapenv:Body>
</soapenv:Envelope>
 ]]>
                  </String>
                </value>
              </entry>
            </Map>
          </value>
        </entry>

        <!-- mapping of HP Service Manager request status values to the
             possible status values in the IIQ (RequestStatus class) -->
        <entry key="statusMap">
          <value>
            <Map>
              <entry key="Categorize" value="inProcess" />
              <entry key="Assign" value="inProcess" />
              <entry key="Categorize" value="inProcess" />
              <entry key="Closed" value="committed" />
              <entry key="Pending Other" value="inProcess" />
              <entry key="Referred" value="inProcess" />
              <entry key="Replaced Problem" value="inProcess" />
              <entry key="Resolved" value="committed" />
              <entry key="Open" value="inProcess" />
              <entry key="Accepted" value="inProcess" />
              <entry key="Rejected" value="failure" />
              <entry key="Work In Progress" value="inProcess" />
              <entry key="Pending Customer" value="inProcess" />
              <entry key="Pending Vendor" value="inProcess" />
              <entry key="Pending Change" value="inProcess" />
              <entry key="Pending Evidence" value="inProcess" />
              <entry key="Pending Vendor/Supplier" value="inProcess" />
              <entry key="Suspended" value="inProcess" />
            </Map>
          </value>
        </entry>

        <entry key="statusMapClosureCode">
          <value>
            <Map>
              <entry key="Automatically Closed" value="committed" />
              <entry key="Not Reproducible" value="committed" />
              <entry key="Out of Scope" value="committed" />
              <entry key="Request Rejected" value="failure" />
              <entry key="Solved by Change/Service Request" value="committed" />
              <entry key="Solved by User Instruction" value="committed" />
              <entry key="Solved by Workaround" value="committed" />
              <!-- 9.4 Unable to Solve -->
              <entry key="Unable to Solve" value="failure" />
              <!-- 9.3 Unable to solve -->
              <entry key="Unable to solve" value="failure" />
              <entry key="Withdrawn by User" value="failure" />
              <entry key="Diagnosed Successfully" value="committed" />
              <entry key="No Fault Found" value="committed" />
              <entry key="No User Response" value="failure" />
              <entry key="Resolved Successfully" value="committed" />
            </Map>
          </value>
        </entry>
        
        <!-- all mentioned fields are mandatory -->
        <entry key="getRequestStatus">
          <value>
            <Map>
              <entry key="endpoint" value="http://localhost:13080/SM/7/ws"/> <!-- e.g. http://ip_address or host_name:port_number/SM/7/ws -->
              <entry key="namespace" value="http://schemas.hp.com/SM/7"/> <!-- mention it as per the WSDL file generated by the HP Service Manger-->
              <entry key="prefix" value="ns"/> <!-- mention it as per the WSDL file generated by the HP Service Manger-->
              <entry key="SOAPAction" value="Retrieve"/> <!-- it will tells HP Service Manager what action should perform -->
              <entry key="responseElement" value="Status"/> <!-- attribute of a soap response which has the incident status -->
              <entry key="closureInfoResponseElement" value="ClosureCode"/> <!-- attribute of a soap response which has the incident Closure Code info -->
              <entry key="soapMessage">
              <!-- XML template -->
                <value>
                  <String><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://schemas.hp.com/SM/7" xmlns:com="http://schemas.hp.com/SM/7/Common" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:RetrieveIncidentRequest attachmentInfo="false" attachmentData="" ignoreEmptyElements="true" updatecounter="" handle="" count="" start="">
         <ns:model query="">
        <ns:keys query="">
          <!--Optional:-->
          <ns:IncidentID type="String" mandatory="" readonly="">$requestID</ns:IncidentID>
        </ns:keys>
        <ns:instance/>
      </ns:model>
      </ns:RetrieveIncidentRequest>
   </soapenv:Body>
</soapenv:Envelope>
]]>
                  </String>
                </value>
              </entry>
            </Map>
          </value>
        </entry>
      </Map>
    </Attributes>
   
    <ManagedResources>
      <ManagedResource>
        <ApplicationRef>
          <Reference class="sailpoint.object.Application" name="Demo App1" />
        </ApplicationRef>
      </ManagedResource>
      <ManagedResource>
        <ApplicationRef>
          <Reference class="sailpoint.object.Application" name="Demo App2" />
        </ApplicationRef>
      </ManagedResource>
    </ManagedResources>
    
  </IntegrationConfig>

</sailpoint>
