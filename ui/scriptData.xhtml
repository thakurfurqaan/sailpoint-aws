<!-- (c) Copyright 2008 SailPoint Technologies, Inc., All Rights Reserved. -->

<html
  xmlns:sp="http://sailpoint.com/ui"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:ui="http://java.sun.com/jsf/facelets">
  <h:head>
    <ui:composition>
      <script type="text/javascript">
        var SailPoint = SailPoint || {};
        SailPoint.CONTEXT_PATH = '#{base.requestContextPath}';
        SailPoint.SESSION_TIMEOUT = #{login.sessionTimeout};
        SailPoint.XSRF_TOKEN = '#{base.csrfToken}';
        SailPoint.REVISION = '#{debug.revision}';
        SailPoint.CURR_USER_LOCALE = '#{base.locale}';
        SailPoint.CURR_USER_LOCALE_TAG = '#{base.localeTag}';
      </script>

      <ui:fragment rendered="#{base.loggedIn}">
        <script type="text/javascript">
          //Create the configData object to store config values
          SailPoint.configData = {};
          // Stored here so it can be easily accessed globally
          SailPoint.CURR_DISPLAYABLE_USER_NAME = '#{sp:escapeJavascript(base.loggedInUser.displayableName)}';
          SailPoint.CURR_USER_NAME = '#{sp:escapeJavascript(base.loggedInUserName)}';
          SailPoint.CURR_USER_ID = '#{base.loggedInUser.id}';
          SailPoint.SYSTEM_LOCALE = '#{base.defaultLanguage}';
          SailPoint.SYSTEM_ADMIN = '#{base.systemAdmin}';

          SailPoint.ORIGINAL_AUTH_ID = '#{sp:escapeJavascript(base.originalAuthId)}';
          SailPoint.ORIGINAL_NATIVE_ID = '#{sp:escapeJavascript(base.originalNativeId)}';
          SailPoint.SSO_AUTHENTICATED = #{base.ssoAuthenticated};

          SailPoint.ALLOW_REQUEST_FOR_OTHERS = #{uiDashboard.allowRequestForOthers};
          SailPoint.ALLOW_REQUEST_FOR_SELF = #{uiDashboard.allowRequestForSelf};

          SailPoint.DASHBOARD_CARDS = #{uiDashboard.dashboardCardsJSON};

          SailPoint.LCM_ENABLED = #{uiDashboard.lcmEnabled};
          SailPoint.configData.ALLOW_REQUEST_FOR_OTHERS = #{uiDashboard.allowRequestForOthers};
          SailPoint.configData.ALLOW_REQUEST_FOR_SELF = #{uiDashboard.allowRequestForSelf};
          SailPoint.configData.IS_MOBILE = #{base.mobileLogin};
          SailPoint.configData.VIEW_PROVISIONING_TRANSACTION_ACCESS = #{sp:hasRight(facesContext, "ViewProvisioningTransaction")};
          SailPoint.configData.FULL_PROVISIONING_TRANSACTION_ACCESS = #{sp:hasRight(facesContext, "FullAccessProvisioningTransaction")};
          SailPoint.configData.PROVISIONING_TRANSACTION_EXPORT_ACCESS =
              #{sp:hasRight(facesContext, "FullAccessProvisioningTransactionReport")};
          SailPoint.configData.READ_TASK_ACCESS = #{sp:hasRight(facesContext, "ViewTaskManagement")};
          SailPoint.configData.FULL_TASK_ACCESS = #{sp:hasRight(facesContext, "FullAccessTaskManagement")};
          SailPoint.configData.VIEW_ENVIRONMENT_MONITORING = #{sp:hasRight(facesContext, "ViewEnvironmentMonitoring")};
          SailPoint.configData.FULL_ENVIRONMENT_MONITORING_ACCESS = #{sp:hasRight(facesContext, "FullAccessEnvironmentMonitoring")};
          SailPoint.configData.FULL_BATCH_REQUEST_ACCESS = #{sp:hasRight(facesContext, "FullAccessBatchRequest")};


          SailPoint.BAND_CONFIG = #{bandConfig.bandJson};

          SailPoint.configData.ACCESS_REQUEST_ALLOW_PRIORITY_EDITING = #{sp:getSystemConfigurationValue('allowPriorityEditing', false)};
          SailPoint.SET_IDENTITY_UNLOCK = #{sp:hasRight(facesContext, "UnlockIdentity")};
          SailPoint.SET_IDENTITY_PASSWORD = #{sp:hasRight(facesContext, "SetIdentityPassword")};
          SailPoint.SET_IDENTITY_FORWARDING = #{sp:hasRight(facesContext, "SetIdentityForwarding")};

          SailPoint.PLUGINS_ENABLED = #{plugins.enabled};
          SailPoint.ANGULAR_SNIPPET_ENABLED = #{plugins.angularSnippetEnabled};
          SailPoint.widgetFunctions = [];

          //IIQETN-6662 :- Property defined to be used for "Loading spinner".
          //Why not use spTranslateFilter for 'loading_data'?
          //There is a small delay when calling the spTranslateFilter, this delay is
          //caused because we are calling a REST service '/ui/rest/messageCatalog'.
          //This delay is only visible when using the "Loading spinner" because it is
          //the very first thing that we show up when loading a page or widget.
          SailPoint.LOADING_DATA = '#{msgs.loading_data}';
        </script>
      </ui:fragment>
    </ui:composition>
  </h:head>
</html>
